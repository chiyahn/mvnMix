% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvn_funcs.R
\name{mvnmixMaxPhiStep}
\alias{mvnmixMaxPhiStep}
\title{mvnmixMaxPhiStep}
\usage{
mvnmixMaxPhiStep(htaupair, y, parlist, an, ninits, ninits.short, epsilon.short,
  epsilon, maxit.short, maxit, verb)
}
\arguments{
\item{htaupair}{A set of h and tau}

\item{y}{n by d matrix of data}

\item{parlist}{The parameter estimates as a list containing alpha, mu, and sigma
in the form of (alpha = (alpha_1,...,alpha_m), mu = (mu_1',...,mu_m'),
sigma = (vech(sigma_1)',...,vech(sigma_m)')}

\item{an}{a term used for penalty function}

\item{ninits}{The number of randomly drawn initial values.}

\item{ninits.short}{The number of candidates used to generate an initial phi, in short MEM}

\item{epsilon.short}{The convergence criterion in short EM. Convergence is declared when the penalized log-likelihood increases by less than \code{epsilon.short}.}

\item{epsilon}{The convergence criterion. Convergence is declared when the penalized log-likelihood increases by less than \code{epsilon}.}

\item{maxit.short}{The maximum number of iterations in short EM.}

\item{maxit}{The maximum number of iterations.}

\item{verb}{Determines whether to print a message if an error occurs.}
}
\value{
A list of phi, log-likelihood, and penalized log-likelihood resulting from MEM algorithm.
}
\description{
Given a pair of h and tau and data, compute ordinary &
penalized log-likelihood ratio resulting from MEM algorithm at k=1,2,3,
tailored for parallelization.
}
